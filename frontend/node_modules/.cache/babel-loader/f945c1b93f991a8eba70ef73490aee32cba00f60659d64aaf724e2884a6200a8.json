{"ast":null,"code":"var _jsxFileName = \"/Users/ilyakortchinski/Main/wallet-keeper/frontend/src/pages/Home/Home.tsx\";\nimport WalletForm from '../../components/Form';\nimport { redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(WalletForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = Home;\nexport default Home;\nexport async function action({\n  request,\n  params\n}) {\n  const method = request.method;\n  const data = Object.fromEntries(await request.formData());\n  const newWallet = {\n    wallet: data.wallet,\n    person: data.person\n  };\n  console.log('new wallet:', newWallet);\n  const responce = await fetch(`http://localhost:8080/`, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newWallet)\n  });\n  if (!responce.ok) {\n    throw new Error('Cannot add wallet');\n  }\n  return redirect('/wallets');\n}\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["WalletForm","redirect","jsxDEV","_jsxDEV","Home","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","Object","fromEntries","formData","newWallet","wallet","person","console","log","responce","fetch","headers","body","JSON","stringify","ok","Error","$RefreshReg$"],"sources":["/Users/ilyakortchinski/Main/wallet-keeper/frontend/src/pages/Home/Home.tsx"],"sourcesContent":["import WalletForm from '../../components/Form';\nimport { redirect } from 'react-router-dom';\n\nfunction Home() {\n  return <WalletForm method=\"post\" />;\n}\n\nexport default Home;\n\ntype ActionProps = {\n  request: any;\n  params: any;\n};\n\nexport async function action({ request, params }: ActionProps) {\n  const method = request.method;\n  const data = Object.fromEntries(await request.formData());\n  const newWallet = {\n    wallet: data.wallet,\n    person: data.person,\n  };\n  console.log('new wallet:', newWallet);\n  const responce = await fetch(`http://localhost:8080/`, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newWallet),\n  });\n  if (!responce.ok) {\n    throw new Error('Cannot add wallet');\n  }\n  return redirect('/wallets');\n}\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,uBAAuB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAA,EAAG;EACd,oBAAOD,OAAA,CAACH,UAAU;IAACK,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC;AAACC,EAAA,GAFQN,IAAI;AAIb,eAAeA,IAAI;AAOnB,OAAO,eAAeO,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAoB,CAAC,EAAE;EAC7D,MAAMR,MAAM,GAAGO,OAAO,CAACP,MAAM;EAC7B,MAAMS,IAAI,GAAGC,MAAM,CAACC,WAAW,CAAC,MAAMJ,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEL,IAAI,CAACK,MAAM;IACnBC,MAAM,EAAEN,IAAI,CAACM;EACf,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,SAAS,CAAC;EACrC,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;IACrDnB,MAAM,EAAEA,MAAM;IACdoB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACtC;EACA,OAAO7B,QAAQ,CAAC,UAAU,CAAC;AAC7B;AAAC,IAAAS,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}